2.4.0
 * New options --getservers and --getusermappings for extracting foreign data wrapper information. They are included in --getall (Github Issue #42)
 * Fixed PGPORT environment variable not being honored. Just removed default value for the --port option in the argument configuration so it will honor whatever the default port value is for the environment. (Github Issue #47)
 * Fix grammar. (Github PR #49)

2.3.9
 * Fixed handling of database comments

2.3.8
* Fix RULE extraction breaking in 9.6 due to a change in restore -l pattern (Github Issue #40).
* Greatly simplified the code for generating pg_restore commands for individual objects (only the object id is actually required in the file given to the -L option). You may see COMMENTs showing up in files that were missing them before.
* Handle PostgreSQL 10 version number format change when checking binary versions internally.

2.3.7
* Explicit raising error if any of job-subprocesses was crashed (Pull Request #39).
* Fix typo when filtering pg_restore lines for comments that could possibly cause errors.


2.3.6
* Handle non-standard characters being printed without error when the --debug option is used (Github Issue #38).


2.3.5
* Change to using binary file input mode when editing files to improve cross-platform support (Pull Request #37)


2.3.4
* Improved cross-platform support (mostly Windows) (Pull Request #36).


2.3.3
* Change shebang line to follow python standard (Pull Request #35).


2.3.2
* Added extraction of DOMAIN objects. These are considered a type and included with --gettypes (and --getall) and included in the types folder.


2.3.1
* Fixed --orreplace not working in combination with --schemadir option (Github #34).
* Fixed --getall or --getroles failing when either --dbname or PGDATABASE environment variable were not set.


2.3.0
* Removed --retry option. It was supressing many error conditions when a bug was encountered, making it look like it ran fine when in it actually didn't. Made debugging to add new features incredibly difficult. Tried to account for all places to allow it to work, but it was becoming ridiculous. If anyone really needs this feature, feel free to make an issue on github and I can try again. Otherwise you're probably better off wrapping this in your own script to make it retry on error.
* Added --dbnamdir & --nodbnamedir options. Allows you to customize the database directory name that's made or exclude it all together. By default, pg_extractor always puts all objects in a folder named for the database it came from. (Github Issue #33)
* Added --getextensions option (included in --getall). The only contents that are typically placed in the resulting files are a single "CREATE EXTENSION" line and an associated comment if applicable. See the PostgreSQL documentation concerning pg_dump & extensions for an explanation why. Including this option for schema completeness. (Github Issue #32)


2.2.0
* Added --service option to allow the use of predefined service connections. Suggestion from David Fetter.
* The --dbname option now also sets the --database option for pg_dumpall when dumping role data to tell it which database to connect to. This only works on pg_dump/postgres versions 9.0+. For versions lower than this, the old, default method of connecting to the "postgres" database followed by "template1" will be used.


2.1.0
* Added --retry option. This can be used to tell pg_extractor how many times to run in case it encounters any errors (if set to 3 it will run at most 3 times before giving up). If any retry attempts fail, error details will be output after a successful run or after all attempts fail. Known errors encountered can be suppressed with the --quiet option and won't be output unless all attempts fail. Unknown errors may still cause output at any time while retrying.
* Ensured all caught exceptions are exiting script properly.
* Should now also clean up temp files if script exits unexpectedly (Ctrl+C).


2.0.8
* Fixed regression from 2.0.7 that caused all default privileges (if set) to be skipped when --getall or --getdefaultprivs was set


2.0.7
* Fixed error being thrown when using regex filters when any default privileges had been altered.


2.0.6
* Added support for materialized views. They will be output along with views. Thanks to zgkrepo on Github for the new feature!


2.0.5
* The --host option no longer defaults to "socket.gethostname()". This was forcing pg_dumpall to connect locally via TCP instead of just using the default local socket. This was causing issues for some pg_hba.conf configurations. If a TCP connection is desired, please set the --host option or use the PGHOST env variable. (also removed import of socket library since it's no longer needed).


2.0.4
* Fixed SHARING_VIOLATION error when running on Windows. (Github Issue #29)


2.0.3
* Fixed error being thrown when giving multiple schemas to the -n, -N, -nf, or -Nf filters. (Github Issue #27)
* Allow comments in filter files. Start the line with #. (Github Issue #27)


2.0.2
* Fixed errors being thrown when --jobs option was used to extract schemas, rules, triggers, sequences, or types (Github Issue #26)
* Fixed incorrect contents being output into extracted files when --jobs option was being used. If you were using --jobs option before, please re-run script again to fix any incorrect file contents. (Discovered when fixing Github Issue #26)


2.0.1
* Remove python 3 check at the top of the script. This allows the 3to2 conversion script to make a working version of pg_extractor for python 2.7 (https://pypi.python.org/pypi/3to2) (Github Issue #24)
* Fixed broken option --schema_include, --schema_include_file, --schema_exclude, --schema_exlude_file. (Github Issue #25)
